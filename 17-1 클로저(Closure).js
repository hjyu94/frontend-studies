/*********************************************************
### 클로저

함수를 정의하지 않고 함수도 또 하나의 객체로 만들며 그 자체가 정의다.
그 객체 자체가 반환될 수도 있고 함수가 함수 안에서 만들어질 수도 있는
특징 때문에 생기는 이슈


### 변수 생명주기와 클로저

(EX1)
	function f1() {
		var a = 1; // 지역변수, f1() 이 종료될 때 사라진다.
		return a;
	}

	var a = f1();
	alert(a);


(EX2)
	function f1() {
		var a = 1;
		return function f2() {
			return a; // 지역변수를 리턴함
		}
	}
	var f = f1(); 
	// 지역변수를 리턴해서 변수에 또 담고 있기 때문에 
	// f1() 에서 사용했던 자원들을 반납할 수 없다.
	var a = f();
	alert(a);
	 
	function f2 를 f1 에서 사용한 자원을 닫을 수 있는 
	유일한 키워드라고 해서 키워드라고 부른다.

	클로저 때문에 자원이 계속 묶이는 현상이 발생할 수 있다.
	클로저가 잘 다룰 수 있도록 프로그래밍해야 한다.

	클로저: 남은 닫을 수 있게 하는 키워드!
*********************************************************/

function f1() {
	var a = 1; // 생명주기: 44~45 번째 줄
	return a;
}
var a = f1();
console.log('a:' + a);


function g1() {
	var b = 2; // 생명주기: 처음~끝
	return function g2() { // 클로저
		return b;
	}
}
var b = g1();
console.log('b: ' + b);

/*
	a:1
	b: function g2() { // 클로저
	                return b;
	        }
*/